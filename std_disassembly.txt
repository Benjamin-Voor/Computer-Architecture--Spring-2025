
lab04_std:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	push   0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 94 2f 00 00    	jmp    *0x2f94(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <_init+0x20>
    103e:	66 90                	xchg   %ax,%ax
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   $0x1
    1049:	e9 d2 ff ff ff       	jmp    1020 <_init+0x20>
    104e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64
    1054:	ff 25 9e 2f 00 00    	jmp    *0x2f9e(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <puts@plt>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	ff 25 5e 2f 00 00    	jmp    *0x2f5e(%rip)        # 3fc8 <puts@GLIBC_2.2.5>
    106a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001070 <printf@plt>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	ff 25 56 2f 00 00    	jmp    *0x2f56(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    107a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	45 31 c0             	xor    %r8d,%r8d
    1096:	31 c9                	xor    %ecx,%ecx
    1098:	48 8d 3d 54 02 00 00 	lea    0x254(%rip),%rdi        # 12f3 <main>
    109f:	ff 15 33 2f 00 00    	call   *0x2f33(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10a5:	f4                   	hlt
    10a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ad:	00 00 00 

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 16 2f 00 00 	mov    0x2f16(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	ret
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    $1,%rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	ret
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	call   10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	ret
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	ret
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64
    1164:	e9 77 ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001169 <std_ex_if_else>:
    1169:	f3 0f 1e fa          	endbr64
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	48 83 ec 10          	sub    $0x10,%rsp
    1175:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1178:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    117c:	7e 11                	jle    118f <std_ex_if_else+0x26> 	# Jump if Lesser than or Equal to to line 118f
    117e:	48 8d 05 83 0e 00 00 	lea    0xe83(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    1185:	48 89 c7             	mov    %rax,%rdi
    1188:	e8 d3 fe ff ff       	call   1060 <puts@plt>
    118d:	eb 0f                	jmp    119e <std_ex_if_else+0x35>
    118f:	48 8d 05 80 0e 00 00 	lea    0xe80(%rip),%rax        # 2016 <_IO_stdin_used+0x16>
    1196:	48 89 c7             	mov    %rax,%rdi
    1199:	e8 c2 fe ff ff       	call   1060 <puts@plt>
    119e:	90                   	nop
    119f:	c9                   	leave
    11a0:	c3                   	ret

00000000000011a1 <std_ex_conditional>:
    11a1:	f3 0f 1e fa          	endbr64
    11a5:	55                   	push   %rbp
    11a6:	48 89 e5             	mov    %rsp,%rbp
    11a9:	48 83 ec 10          	sub    $0x10,%rsp
    11ad:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11b0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    11b4:	7e 09                	jle    11bf <std_ex_conditional+0x1e>
    11b6:	48 8d 05 6b 0e 00 00 	lea    0xe6b(%rip),%rax        # 2028 <_IO_stdin_used+0x28>
    11bd:	eb 07                	jmp    11c6 <std_ex_conditional+0x25>
    11bf:	48 8d 05 6b 0e 00 00 	lea    0xe6b(%rip),%rax        # 2031 <_IO_stdin_used+0x31>
    11c6:	48 89 c6             	mov    %rax,%rsi
    11c9:	48 8d 05 6e 0e 00 00 	lea    0xe6e(%rip),%rax        # 203e <_IO_stdin_used+0x3e>
    11d0:	48 89 c7             	mov    %rax,%rdi
    11d3:	b8 00 00 00 00       	mov    $0x0,%eax
    11d8:	e8 93 fe ff ff       	call   1070 <printf@plt>
    11dd:	90                   	nop
    11de:	c9                   	leave
    11df:	c3                   	ret

00000000000011e0 <std_ex_switch>:
    11e0:	f3 0f 1e fa          	endbr64
    11e4:	55                   	push   %rbp
    11e5:	48 89 e5             	mov    %rsp,%rbp
    11e8:	48 83 ec 10          	sub    $0x10,%rsp
    11ec:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11ef:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    11f3:	74 08                	je     11fd <std_ex_switch+0x1d>
    11f5:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
    11f9:	74 13                	je     120e <std_ex_switch+0x2e>
    11fb:	eb 22                	jmp    121f <std_ex_switch+0x3f>
    11fd:	48 8d 05 43 0e 00 00 	lea    0xe43(%rip),%rax        # 2047 <_IO_stdin_used+0x47>
    1204:	48 89 c7             	mov    %rax,%rdi
    1207:	e8 54 fe ff ff       	call   1060 <puts@plt>
    120c:	eb 21                	jmp    122f <std_ex_switch+0x4f>
    120e:	48 8d 05 39 0e 00 00 	lea    0xe39(%rip),%rax        # 204e <_IO_stdin_used+0x4e>
    1215:	48 89 c7             	mov    %rax,%rdi
    1218:	e8 43 fe ff ff       	call   1060 <puts@plt>
    121d:	eb 10                	jmp    122f <std_ex_switch+0x4f>
    121f:	48 8d 05 2f 0e 00 00 	lea    0xe2f(%rip),%rax        # 2055 <_IO_stdin_used+0x55>
    1226:	48 89 c7             	mov    %rax,%rdi
    1229:	e8 32 fe ff ff       	call   1060 <puts@plt>
    122e:	90                   	nop
    122f:	90                   	nop
    1230:	c9                   	leave
    1231:	c3                   	ret

0000000000001232 <std_ex_do_while>:
    1232:	f3 0f 1e fa          	endbr64
    1236:	55                   	push   %rbp
    1237:	48 89 e5             	mov    %rsp,%rbp
    123a:	48 83 ec 20          	sub    $0x20,%rsp
    123e:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1241:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1248:	8b 45 fc             	mov    -0x4(%rbp),%eax
    124b:	89 c6                	mov    %eax,%esi
    124d:	48 8d 05 15 0e 00 00 	lea    0xe15(%rip),%rax        # 2069 <_IO_stdin_used+0x69>
    1254:	48 89 c7             	mov    %rax,%rdi
    1257:	b8 00 00 00 00       	mov    $0x0,%eax
    125c:	e8 0f fe ff ff       	call   1070 <printf@plt>
    1261:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1265:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1268:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    126b:	7c db                	jl     1248 <std_ex_do_while+0x16>
    126d:	90                   	nop
    126e:	90                   	nop
    126f:	c9                   	leave
    1270:	c3                   	ret

0000000000001271 <std_ex_while>:
    1271:	f3 0f 1e fa          	endbr64
    1275:	55                   	push   %rbp
    1276:	48 89 e5             	mov    %rsp,%rbp
    1279:	48 83 ec 20          	sub    $0x20,%rsp
    127d:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1280:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1287:	eb 1d                	jmp    12a6 <std_ex_while+0x35>
    1289:	8b 45 fc             	mov    -0x4(%rbp),%eax
    128c:	89 c6                	mov    %eax,%esi
    128e:	48 8d 05 d4 0d 00 00 	lea    0xdd4(%rip),%rax        # 2069 <_IO_stdin_used+0x69>
    1295:	48 89 c7             	mov    %rax,%rdi
    1298:	b8 00 00 00 00       	mov    $0x0,%eax
    129d:	e8 ce fd ff ff       	call   1070 <printf@plt>
    12a2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    12a6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12a9:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    12ac:	7c db                	jl     1289 <std_ex_while+0x18>
    12ae:	90                   	nop
    12af:	90                   	nop
    12b0:	c9                   	leave
    12b1:	c3                   	ret

00000000000012b2 <std_ex_for>:
    12b2:	f3 0f 1e fa          	endbr64
    12b6:	55                   	push   %rbp
    12b7:	48 89 e5             	mov    %rsp,%rbp
    12ba:	48 83 ec 20          	sub    $0x20,%rsp
    12be:	89 7d ec             	mov    %edi,-0x14(%rbp)
    12c1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12c8:	eb 1d                	jmp    12e7 <std_ex_for+0x35>
    12ca:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12cd:	89 c6                	mov    %eax,%esi
    12cf:	48 8d 05 93 0d 00 00 	lea    0xd93(%rip),%rax        # 2069 <_IO_stdin_used+0x69>
    12d6:	48 89 c7             	mov    %rax,%rdi
    12d9:	b8 00 00 00 00       	mov    $0x0,%eax
    12de:	e8 8d fd ff ff       	call   1070 <printf@plt>
    12e3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    12e7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12ea:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    12ed:	7c db                	jl     12ca <std_ex_for+0x18>
    12ef:	90                   	nop
    12f0:	90                   	nop
    12f1:	c9                   	leave
    12f2:	c3                   	ret

00000000000012f3 <main>:
    12f3:	f3 0f 1e fa          	endbr64
    12f7:	55                   	push   %rbp
    12f8:	48 89 e5             	mov    %rsp,%rbp
    12fb:	48 8d 05 76 0d 00 00 	lea    0xd76(%rip),%rax        # 2078 <_IO_stdin_used+0x78>
    1302:	48 89 c7             	mov    %rax,%rdi
    1305:	e8 56 fd ff ff       	call   1060 <puts@plt>
    130a:	48 8d 05 88 0d 00 00 	lea    0xd88(%rip),%rax        # 2099 <_IO_stdin_used+0x99>
    1311:	48 89 c7             	mov    %rax,%rdi
    1314:	e8 47 fd ff ff       	call   1060 <puts@plt>
    1319:	bf 01 00 00 00       	mov    $0x1,%edi
    131e:	e8 46 fe ff ff       	call   1169 <std_ex_if_else>
    1323:	48 8d 05 84 0d 00 00 	lea    0xd84(%rip),%rax        # 20ae <_IO_stdin_used+0xae>
    132a:	48 89 c7             	mov    %rax,%rdi
    132d:	e8 2e fd ff ff       	call   1060 <puts@plt>
    1332:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1337:	e8 65 fe ff ff       	call   11a1 <std_ex_conditional>
    133c:	48 8d 05 83 0d 00 00 	lea    0xd83(%rip),%rax        # 20c6 <_IO_stdin_used+0xc6>
    1343:	48 89 c7             	mov    %rax,%rdi
    1346:	e8 15 fd ff ff       	call   1060 <puts@plt>
    134b:	bf 02 00 00 00       	mov    $0x2,%edi
    1350:	e8 8b fe ff ff       	call   11e0 <std_ex_switch>
    1355:	48 8d 05 7d 0d 00 00 	lea    0xd7d(%rip),%rax        # 20d9 <_IO_stdin_used+0xd9>
    135c:	48 89 c7             	mov    %rax,%rdi
    135f:	e8 fc fc ff ff       	call   1060 <puts@plt>
    1364:	bf 03 00 00 00       	mov    $0x3,%edi
    1369:	e8 c4 fe ff ff       	call   1232 <std_ex_do_while>
    136e:	48 8d 05 7c 0d 00 00 	lea    0xd7c(%rip),%rax        # 20f1 <_IO_stdin_used+0xf1>
    1375:	48 89 c7             	mov    %rax,%rdi
    1378:	e8 e3 fc ff ff       	call   1060 <puts@plt>
    137d:	bf 03 00 00 00       	mov    $0x3,%edi
    1382:	e8 ea fe ff ff       	call   1271 <std_ex_while>
    1387:	48 8d 05 75 0d 00 00 	lea    0xd75(%rip),%rax        # 2103 <_IO_stdin_used+0x103>
    138e:	48 89 c7             	mov    %rax,%rdi
    1391:	e8 ca fc ff ff       	call   1060 <puts@plt>
    1396:	bf 03 00 00 00       	mov    $0x3,%edi
    139b:	e8 12 ff ff ff       	call   12b2 <std_ex_for>
    13a0:	b8 00 00 00 00       	mov    $0x0,%eax
    13a5:	5d                   	pop    %rbp
    13a6:	c3                   	ret

Disassembly of section .fini:

00000000000013a8 <_fini>:
    13a8:	f3 0f 1e fa          	endbr64
    13ac:	48 83 ec 08          	sub    $0x8,%rsp
    13b0:	48 83 c4 08          	add    $0x8,%rsp
    13b4:	c3                   	ret
